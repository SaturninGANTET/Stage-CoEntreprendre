{
  "_args": [
    [
      "sequelize",
      "/home/satutu/Stage"
    ]
  ],
  "_from": "sequelize@latest",
  "_hasShrinkwrap": false,
  "_id": "sequelize@6.2.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/sequelize",
  "_nodeVersion": "10.21.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sequelize_6.2.4_1593583641536_0.48157742430911044"
  },
  "_npmUser": {
    "email": "sushantdhiman@outlook.com",
    "name": "sushantdhiman"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {},
  "_requested": {
    "name": "sequelize",
    "raw": "sequelize",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize/-/sequelize-6.2.4.tgz",
  "_shasum": "d6903294177c1df5c2a8b89902d1f76789f0fd70",
  "_shrinkwrap": null,
  "_spec": "sequelize",
  "_where": "/home/satutu/Stage",
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-angular"
    ]
  },
  "dependencies": {
    "debug": "^4.1.1",
    "dottie": "^2.0.0",
    "inflection": "1.12.0",
    "lodash": "^4.17.15",
    "moment": "^2.26.0",
    "moment-timezone": "^0.5.31",
    "retry-as-promised": "^3.2.0",
    "semver": "^7.3.2",
    "sequelize-pool": "^6.0.0",
    "toposort-class": "^1.0.1",
    "uuid": "^8.1.0",
    "validator": "^10.11.0",
    "wkx": "^0.5.0"
  },
  "description": "Multi dialect ORM for Node.JS",
  "devDependencies": {
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-angular": "^8.3.4",
    "@types/node": "^12.12.42",
    "@types/validator": "^10.11.0",
    "acorn": "^7.2.0",
    "chai": "^4.x",
    "chai-as-promised": "^7.x",
    "chai-datetime": "^1.6.0",
    "cheerio": "^1.0.0-rc.3",
    "cls-hooked": "^4.2.2",
    "cross-env": "^7.0.2",
    "delay": "^4.3.0",
    "dtslint": "^3.6.4",
    "env-cmd": "^10.1.0",
    "esdoc": "^1.1.0",
    "esdoc-ecmascript-proposal-plugin": "^1.0.0",
    "esdoc-inject-style-plugin": "^1.0.0",
    "esdoc-standard-plugin": "^1.0.0",
    "eslint": "^6.8.0",
    "eslint-plugin-jsdoc": "^20.4.0",
    "eslint-plugin-mocha": "^6.2.2",
    "fs-jetpack": "^2.4.0",
    "husky": "^4.2.5",
    "js-combinatorics": "^0.5.5",
    "lcov-result-merger": "^3.0.0",
    "lint-staged": "^10.2.6",
    "mariadb": "^2.3.1",
    "markdownlint-cli": "^0.23.1",
    "marked": "^1.1.0",
    "mocha": "^7.1.2",
    "mysql2": "^2.1.0",
    "nyc": "^15.0.0",
    "p-map": "^4.0.0",
    "p-props": "^4.0.0",
    "p-timeout": "^3.2.0",
    "pg": "^8.2.1",
    "pg-hstore": "^2.x",
    "rimraf": "^3.0.2",
    "semantic-release": "^17.0.7",
    "sinon": "^9.0.2",
    "sinon-chai": "^3.3.0",
    "sqlite3": "^4.2.0",
    "tedious": "8.3.0",
    "typescript": "^3.9.3"
  },
  "directories": {},
  "dist": {
    "fileCount": 125,
    "integrity": "sha512-pgb3CC2Dk3kjZ4knuonF6ixpdBxJwPyjmE8metIJ3D6LovAQK+5QG/DesA43OPsWhgo2TYPZst8YsBk/RE1ZyA==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe/CgaCRA9TVsSAnZWagAAtHgP/AkZU8hKWsW5d1RZx+a2\n5xos+X6WTCrvHTOcfeUnbIx0Bjg9zYORvjCBNJH9eq8J4LOt5XUYnGktiDuA\nqhWE2gMIgH0KWn1Io3ArPA64xv4HyFNBspm/VkNp02ZBkhQnUpfAcyWM4giX\nuUsx8ZW1+90kRsVC0xDIanHvL8i0mQrcwdvLwmYntPCtMWa0Zo1ub7Rtjz7/\nM/uG1KlHqdSGrYwZOLl8p9Pr+CHGxukoz/KE6yYn/vuhsdJ4g2ZUG1RJNF3b\nz4m9gej8nKxLpqQnjEquYjdftvEzC/M3EAKyIh6pgykm0b6/5kNt+ymJJmP1\nTHNLuTP2Wp5y31jDgTzvc3ZZPn2wn2J+nHkFPLLajOrregniZdBLIs/oF+1V\ndnV3+lQC6eq8SzZJA0venLeikNuUR+z3la2/51squWvtyISgdVi1bFM/gnvl\nSDf4BDHe3sgF7BGuQlP5JCK+HQJQYfgkz0yPFOrfGFpv+MAJEnhil+IinQrH\nRhLDNjg9o3WuI/kgGKIytMBSr277rgefQPrHnt0rXTLgHtK//mvZtASHtX53\nHWrStsk000jH+3uvZHAXc+rxunVetI+VCayb95putuD3h8rogcO4JGXZqQN6\nkeObpJU3fqR+1VL+F5/hNZR7VYZ3PdXLa/Xt6EpBZndUXdXuuzTnW8zWAMP7\nduX4\r\n=w1Xt\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "d6903294177c1df5c2a8b89902d1f76789f0fd70",
    "tarball": "https://registry.npmjs.org/sequelize/-/sequelize-6.2.4.tgz",
    "unpackedSize": 1142696
  },
  "engines": {
    "node": ">=10.0.0"
  },
  "gitHead": "9a45509e3f4b23b957a195190dd989ea33cae8d8",
  "homepage": "https://sequelize.org/",
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "mariadb",
    "mssql",
    "mysql",
    "nodejs",
    "object relational mapper",
    "orm",
    "postgres",
    "postgresql",
    "sqlite"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": "eslint"
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "durango",
      "email": "me@danieldurante.com"
    },
    {
      "name": "eseliger",
      "email": "erikseliger@me.com"
    },
    {
      "name": "felixfbecker",
      "email": "felix.b@outlook.com"
    },
    {
      "name": "janaameier",
      "email": "janzeh@gmail.com"
    },
    {
      "name": "mickhansen",
      "email": "mick.kasper.hansen@gmail.com"
    },
    {
      "name": "sdepold",
      "email": "sascha@depold.com"
    },
    {
      "name": "sushantdhiman",
      "email": "sushantdhiman@outlook.com"
    }
  ],
  "name": "sequelize",
  "optionalDependencies": {},
  "options": {
    "env_cmd": "-f ./test/config/.docker.env"
  },
  "publishConfig": {
    "tag": "latest"
  },
  "readme": "ERROR: No README data found!",
  "release": {
    "branches": [
      "v6"
    ],
    "verifyConditions": [
      "@semantic-release/github",
      "@semantic-release/npm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "cover": "rimraf coverage && npm run teaser && npm run cover-integration && npm run cover-unit && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha --require scripts/mocha-bootload -t 30000 --exit \"test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha --require scripts/mocha-bootload -t 30000 --exit \"test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "docs": "rimraf esdoc && esdoc -c docs/esdoc-config.js && cp docs/favicon.ico esdoc/favicon.ico && cp docs/ROUTER.txt esdoc/ROUTER && node docs/run-docs-transforms.js && node docs/redirects/create-redirects.js && rimraf esdoc/file esdoc/source.html",
    "lint": "eslint lib test --quiet",
    "lint-docs": "markdownlint docs",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "semantic-release": "semantic-release",
    "setup-mssql": "env-cmd $npm_package_options_env_cmd ./scripts/setup-mssql",
    "sscce": "env-cmd $npm_package_options_env_cmd node sscce.js",
    "sscce-mariadb": "cross-env DIALECT=mariadb npm run sscce",
    "sscce-mssql": "cross-env DIALECT=mssql npm run sscce",
    "sscce-mysql": "cross-env DIALECT=mysql npm run sscce",
    "sscce-postgres": "cross-env DIALECT=postgres npm run sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite npm run sscce",
    "teaser": "node scripts/teaser",
    "test": "npm run teaser && npm run test-unit && npm run test-integration",
    "test-all": "npm run test-mariadb && npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mssql",
    "test-docker": "npm run test-docker-unit && npm run test-docker-integration",
    "test-docker-integration": "env-cmd $npm_package_options_env_cmd npm run test-integration",
    "test-docker-unit": "npm run test-unit",
    "test-integration": "mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec \"test/integration/**/*.test.js\"",
    "test-integration-all": "npm run test-integration-mariadb && npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite",
    "test-integration-mariadb": "cross-env DIALECT=mariadb npm run test-integration",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-mariadb": "cross-env DIALECT=mariadb npm test",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-typings": "tsc -b types/tsconfig.json &&  dtslint --expectOnly types/test",
    "test-unit": "mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec \"test/unit/**/*.js\"",
    "test-unit-all": "npm run test-unit-mariadb && npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite",
    "test-unit-mariadb": "cross-env DIALECT=mariadb npm run test-unit",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit"
  },
  "types": "types",
  "version": "6.2.4"
}
